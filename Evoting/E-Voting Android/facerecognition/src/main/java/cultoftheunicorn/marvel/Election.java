package cultoftheunicorn.marvel;
//package com.noev.ethereumhelloworld;
//package com.cultoftheunicorn.marvel;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.0.1.
 */
public class Election extends Contract {
    private static final String BINARY = "6080604052600060025560006003556000600455600060055560006006556000600755600060085534801561003357600080fd5b50600980546001600160a01b0319163317908190556001600160a01b03166000908152602081905260409020600201805460ff19166001179055610e3c8061007c6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630121b93f146100675780631faa036f146100865780637f9c414a1461013b578063a3e7ac91146101e1578063a48bdb7c146101fe578063c1700e001461022c575b600080fd5b6100846004803603602081101561007d57600080fd5b5035610359565b005b6100a36004803603602081101561009c57600080fd5b5035610471565b6040518080602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156100fe5781810151838201526020016100e6565b50505050905090810190601f16801561012b5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6100846004803603602081101561015157600080fd5b81019060208101813564010000000081111561016c57600080fd5b82018360208201111561017e57600080fd5b803590602001918460018302840111640100000000831117156101a057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610537945050505050565b610084600480360360208110156101f757600080fd5b503561062a565b610206610688565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6100846004803603604081101561024257600080fd5b81019060208101813564010000000081111561025d57600080fd5b82018360208201111561026f57600080fd5b8035906020019184600183028401116401000000008311171561029157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102e457600080fd5b8201836020820111156102f657600080fd5b8035906020019184600183028401116401000000008311171561031857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109f0945050505050565b3360008181526020819052604090205460ff16156103c15760408051600160e51b62461bcd02815260206004820152601f60248201527f596f75206861766520616c726561647920566f7465642e205468616e6b732100604482015290519081900360640190fd5b600154821061041a5760408051600160e51b62461bcd02815260206004820152601960248201527f53656c65637420726967687420696e64657820706c6561736500000000000000604482015290519081900360640190fd5b6001600160a01b03811660009081526020819052604090206001808201849055815460ff19168117909155805481908490811061045357fe5b60009182526020909120600260039092020101805490910190555050565b6001818154811061047e57fe5b60009182526020918290206003919091020180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252919350918391908301828280156105175780601f106104ec57610100808354040283529160200191610517565b820191906000526020600020905b8154815290600101906020018083116104fa57829003601f168201915b50505050600183015460029093015491926001600160a01b031691905083565b6009546001600160a01b0316331461058357604051600160e51b62461bcd028152600401808060200182810382526023815260200180610dee6023913960400191505060405180910390fd5b600061058e82610af6565b6001600160a01b03811660009081526020819052604090205490915060ff16156106025760408051600160e51b62461bcd02815260206004820152601860248201527f20566f7465722068617320616c726561647920766f7465640000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152602081905260409020600201805460ff1916600117905550565b6009546001600160a01b0316331461067657604051600160e51b62461bcd028152600401808060200182810382526023815260200180610dee6023913960400191505060405180910390fd5b80610682600182610c9e565b50600255565b6009546000908190819081906001600160a01b031633146106dd57604051600160e51b62461bcd028152600401808060200182810382526023815260200180610dee6023913960400191505060405180910390fd5b60005b6002548110156109d65760408051600160ec1b620424a50281529051908190036003019020600180548390811061071357fe5b906000526020600020906003020160000160405160200180828054600181600116156101000203166002900480156107825780601f10610760576101008083540402835291820191610782565b820191906000526020600020905b81548152906001019060200180831161076e575b50509150506040516020818303038152906040528051906020012014156107ce57600181815481106107b057fe5b600091825260209091206003918202016002015481540190556109ce565b60408051600160c01b67434f4e4752455353028152905190819003600801902060018054839081106107fc57fe5b9060005260206000209060030201600001604051602001808280546001816001161561010002031660029004801561086b5780601f1061084957610100808354040283529182019161086b565b820191906000526020600020905b815481529060010190602001808311610857575b50509150506040516020818303038152906040528051906020012014156108bb576001818154811061089957fe5b60009182526020909120600260039092020101546004805490910190556109ce565b60408051600160ec1b62041415028152905190819003600301902060018054839081106108e457fe5b906000526020600020906003020160000160405160200180828054600181600116156101000203166002900480156109535780601f10610931576101008083540402835291820191610953565b820191906000526020600020905b81548152906001019060200180831161093f575b50509150506040516020818303038152906040528051906020012014156109a3576001818154811061098157fe5b60009182526020909120600260039092020101546005805490910190556109ce565b600181815481106109b057fe5b60009182526020909120600260039092020101546006805490910190555b6001016106e0565b505060035460045460055460065492969195509350909150565b6009546001600160a01b03163314610a3c57604051600160e51b62461bcd028152600401808060200182810382526023815260200180610dee6023913960400191505060405180910390fd5b6000610a4783610af6565b905080600160075481548110610a5957fe5b906000526020600020906003020160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600160075481548110610a9e57fe5b90600052602060002090600302016000019080519060200190610ac2929190610ccf565b506000600160075481548110610ad457fe5b6000918252602090912060026003909202010155505060078054600101905550565b60008181808060025b602a811015610c935761010084029350848181518110610b1b57fe5b602001015160f81c60f81b60f81c60ff169250848160010181518110610b3d57fe5b602001015160f81c60f81b60f81c60ff1691506061836001600160a01b031610158015610b7457506066836001600160a01b031611155b15610b8457605783039250610be8565b6041836001600160a01b031610158015610ba857506046836001600160a01b031611155b15610bb857603783039250610be8565b6030836001600160a01b031610158015610bdc57506039836001600160a01b031611155b15610be8576030830392505b6061826001600160a01b031610158015610c0c57506066826001600160a01b031611155b15610c1c57605782039150610c80565b6041826001600160a01b031610158015610c4057506046826001600160a01b031611155b15610c5057603782039150610c80565b6030826001600160a01b031610158015610c7457506039826001600160a01b031611155b15610c80576030820391505b6010830282019390930192600201610aff565b509195945050505050565b815481835581811115610cca57600302816003028360005260206000209182019101610cca9190610d4d565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d1057805160ff1916838001178555610d3d565b82800160010185558215610d3d579182015b82811115610d3d578251825591602001919060010190610d22565b50610d49929150610d8c565b5090565b610d8991905b80821115610d49576000610d678282610da6565b506001810180546001600160a01b031916905560006002820155600301610d53565b90565b610d8991905b80821115610d495760008155600101610d92565b50805460018160011615610100020316600290046000825580601f10610dcc5750610dea565b601f016020900490600052602060002090810190610dea9190610d8c565b5056fe4f6e6c792061646d696e2063616e2061636365737320746869732066756e6374696f6ea165627a7a72305820f7824b1315067865a179103d6edee3b263d657d6b17fdd058a968446b2db63e50029";

    public static final String FUNC_VOTE = "vote";

    public static final String FUNC_CANDIDATES_ARR = "candidates_arr";

    public static final String FUNC_GIVERIGHTTOVOTE = "giveRightToVote";

    public static final String FUNC_SET_CANDIDATES_ARR_LEN = "set_candidates_arr_len";

    public static final String FUNC_RESULTS = "results";

    public static final String FUNC_REGISTERCANDIDATES = "registerCandidates";

    @Deprecated
    protected Election(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Election(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Election(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Election(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> vote(BigInteger _index) {
        final Function function = new Function(
                FUNC_VOTE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_index)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple3<String, String, BigInteger>> candidates_arr(BigInteger param0) {
        final Function function = new Function(FUNC_CANDIDATES_ARR,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple3<String, String, BigInteger>>(
                new Callable<Tuple3<String, String, BigInteger>>() {
                    @Override
                    public Tuple3<String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, String, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> giveRightToVote(String toVoterr) {
        final Function function = new Function(
                FUNC_GIVERIGHTTOVOTE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(toVoterr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> set_candidates_arr_len(BigInteger _length) {
        final Function function = new Function(
                FUNC_SET_CANDIDATES_ARR_LEN,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_length)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> results() {
        final Function function = new Function(
                FUNC_RESULTS,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> registerCandidates(String _candidate_ids, String _party) {
        final Function function = new Function(
                FUNC_REGISTERCANDIDATES,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidate_ids),
                        new org.web3j.abi.datatypes.Utf8String(_party)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Election load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Election(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Election load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Election(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Election load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Election(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Election load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Election(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Election> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Election.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Election> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Election.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Election> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Election.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Election> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Election.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}